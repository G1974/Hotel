/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gr.gk.room;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Georgios Kostopoulos
 */
public class AvailableRoom extends javax.swing.JFrame {

    
    
    public AvailableRoom() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        button3 = new java.awt.Button();
        button4 = new java.awt.Button();
        button5 = new java.awt.Button();
        button6 = new java.awt.Button();
        button7 = new java.awt.Button();
        button8 = new java.awt.Button();
        button9 = new java.awt.Button();
        button10 = new java.awt.Button();
        button11 = new java.awt.Button();
        button12 = new java.awt.Button();
        button13 = new java.awt.Button();
        button14 = new java.awt.Button();
        button15 = new java.awt.Button();
        button16 = new java.awt.Button();
        button17 = new java.awt.Button();
        button18 = new java.awt.Button();
        button19 = new java.awt.Button();
        button20 = new java.awt.Button();
        button21 = new java.awt.Button();
        button22 = new java.awt.Button();
        button23 = new java.awt.Button();
        button24 = new java.awt.Button();
        button25 = new java.awt.Button();
        button26 = new java.awt.Button();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ROOM AVAILABILITY");
        setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        setLocation(new java.awt.Point(600, 50));
        setResizable(false);
        setSize(new java.awt.Dimension(0, 0));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        button1.setBackground(java.awt.Color.green);
        button1.setLabel("1");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setBackground(java.awt.Color.green);
        button2.setLabel("2");
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.setBackground(java.awt.Color.green);
        button3.setLabel("3");
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button4.setBackground(java.awt.Color.green);
        button4.setLabel("4");
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button5.setBackground(java.awt.Color.green);
        button5.setLabel("5");
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button6.setBackground(java.awt.Color.green);
        button6.setLabel("6");
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button7.setBackground(java.awt.Color.green);
        button7.setLabel("7");
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button8.setBackground(java.awt.Color.green);
        button8.setLabel("8");
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        button9.setBackground(java.awt.Color.green);
        button9.setLabel("9");
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        button10.setBackground(java.awt.Color.green);
        button10.setLabel("10");
        button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button10ActionPerformed(evt);
            }
        });

        button11.setBackground(java.awt.Color.green);
        button11.setLabel("11");
        button11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button11ActionPerformed(evt);
            }
        });

        button12.setBackground(java.awt.Color.green);
        button12.setLabel("12");
        button12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button12ActionPerformed(evt);
            }
        });

        button13.setBackground(java.awt.Color.green);
        button13.setLabel("13");
        button13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button13ActionPerformed(evt);
            }
        });

        button14.setBackground(java.awt.Color.green);
        button14.setLabel("14");
        button14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button14ActionPerformed(evt);
            }
        });

        button15.setBackground(java.awt.Color.green);
        button15.setLabel("15");
        button15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button15ActionPerformed(evt);
            }
        });

        button16.setBackground(java.awt.Color.green);
        button16.setLabel("16");
        button16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button16ActionPerformed(evt);
            }
        });

        button17.setBackground(java.awt.Color.green);
        button17.setLabel("17");
        button17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button17ActionPerformed(evt);
            }
        });

        button18.setBackground(java.awt.Color.green);
        button18.setLabel("18");
        button18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button18ActionPerformed(evt);
            }
        });

        button19.setBackground(java.awt.Color.green);
        button19.setLabel("19");
        button19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button19ActionPerformed(evt);
            }
        });

        button20.setBackground(java.awt.Color.green);
        button20.setLabel("20");
        button20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button20ActionPerformed(evt);
            }
        });

        button21.setBackground(java.awt.Color.green);
        button21.setLabel("21");
        button21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button21ActionPerformed(evt);
            }
        });

        button22.setBackground(java.awt.Color.green);
        button22.setLabel("22");
        button22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button22ActionPerformed(evt);
            }
        });

        button23.setBackground(java.awt.Color.green);
        button23.setLabel("23");
        button23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button23ActionPerformed(evt);
            }
        });

        button24.setBackground(java.awt.Color.green);
        button24.setLabel("24");
        button24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button24ActionPerformed(evt);
            }
        });

        button25.setBackground(java.awt.Color.green);
        button25.setLabel("25");
        button25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button25ActionPerformed(evt);
            }
        });

        button26.setBackground(new java.awt.Color(255, 255, 102));
        button26.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
        button26.setLabel("check");
        button26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button26ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gr/gk/room/Χωρίς τίτλοs.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button21, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(button26, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(151, 151, 151))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {button1, button10, button11, button12, button13, button14, button15, button16, button17, button18, button19, button2, button20, button21, button22, button23, button24, button25, button3, button4, button5, button6, button7, button8, button9});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(button11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(button16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(button21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {button1, button10, button11, button12, button13, button14, button15, button16, button17, button18, button19, button2, button20, button21, button22, button23, button24, button25, button6, button7, button8, button9});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {button3, button4, button5});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
         String query="select name,surname,datearrived,datedeparture from records where room="+button3.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
             List<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button3ActionPerformed

    private void button26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button26ActionPerformed
     
        try {
            String query="select room from records";
            PreparedStatement ps=DBUTIL.connection().prepareStatement(query);
            ResultSet res=ps.executeQuery();
       
           while(res.next()){
              int rm=res.getInt("room");
            if(rm==Integer.parseInt(button1.getLabel())){button1.setBackground(Color.red);}
            if(rm==Integer.parseInt(button2.getLabel())){button2.setBackground(Color.red);}
            if(rm==Integer.parseInt(button3.getLabel())){button3.setBackground(Color.red);}
            if(rm==Integer.parseInt(button4.getLabel())){button4.setBackground(Color.red);}
            if(rm==Integer.parseInt(button5.getLabel())){button5.setBackground(Color.red);}
            if(rm==Integer.parseInt(button6.getLabel())){button6.setBackground(Color.red);}
            if(rm==Integer.parseInt(button7.getLabel())){button7.setBackground(Color.red);}
            if(rm==Integer.parseInt(button8.getLabel())){button8.setBackground(Color.red);}
            if(rm==Integer.parseInt(button9.getLabel())){button9.setBackground(Color.red);}
            if(rm==Integer.parseInt(button10.getLabel())){button10.setBackground(Color.red);}
            if(rm==Integer.parseInt(button11.getLabel())){button11.setBackground(Color.red);}
            if(rm==Integer.parseInt(button12.getLabel())){button12.setBackground(Color.red);}
            if(rm==Integer.parseInt(button13.getLabel())){button13.setBackground(Color.red);}
            if(rm==Integer.parseInt(button14.getLabel())){button14.setBackground(Color.red);}
            if(rm==Integer.parseInt(button15.getLabel())){button15.setBackground(Color.red);}
            if(rm==Integer.parseInt(button16.getLabel())){button16.setBackground(Color.red);}
            if(rm==Integer.parseInt(button17.getLabel())){button17.setBackground(Color.red);}
            if(rm==Integer.parseInt(button18.getLabel())){button18.setBackground(Color.red);}
            if(rm==Integer.parseInt(button19.getLabel())){button19.setBackground(Color.red);}
            if(rm==Integer.parseInt(button20.getLabel())){button20.setBackground(Color.red);}
            if(rm==Integer.parseInt(button21.getLabel())){button21.setBackground(Color.red);}
            if(rm==Integer.parseInt(button22.getLabel())){button22.setBackground(Color.red);}
            if(rm==Integer.parseInt(button23.getLabel())){button23.setBackground(Color.red);}
            if(rm==Integer.parseInt(button24.getLabel())){button24.setBackground(Color.red);}
            if(rm==Integer.parseInt(button25.getLabel())){button25.setBackground(Color.red);}
             
          
           }
            
          
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button26ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
       String query="select name,surname,datearrived,datedeparture from records where room="+button1.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
         String query="select name,surname,datearrived,datedeparture from records where room="+button2.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button2ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        String query="select name,surname,datearrived,datedeparture from records where room="+button4.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button4ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
       String query="select name,surname,datearrived,datedeparture from records where room="+button5.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button5ActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
         String query="select name,surname,datearrived,datedeparture from records where room="+button6.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button6ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        String query="select name,surname,datearrived,datedeparture from records where room="+button7.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button7ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        String query="select name,surname,datearrived,datedeparture from records where room="+button8.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button8ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
       String query="select name,surname,datearrived,datedeparture from records where room="+button9.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button9ActionPerformed

    private void button10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button10ActionPerformed
         String query="select name,surname,datearrived,datedeparture from records where room="+button10.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button10ActionPerformed

    private void button11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button11ActionPerformed
        String query="select name,surname,datearrived,datedeparture from records where room="+button11.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button11ActionPerformed

    private void button12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button12ActionPerformed
  String query="select name,surname,datearrived,datedeparture from records where room="+button12.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button12ActionPerformed

    private void button13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button13ActionPerformed
        String query="select name,surname,datearrived,datedeparture from records where room="+button13.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button13ActionPerformed

    private void button14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button14ActionPerformed
        String query="select name,surname,datearrived,datedeparture from records where room="+button14.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button14ActionPerformed

    private void button15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button15ActionPerformed
         String query="select name,surname,datearrived,datedeparture from records where room="+button15.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button15ActionPerformed

    private void button16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button16ActionPerformed
         String query="select name,surname,datearrived,datedeparture from records where room="+button16.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button16ActionPerformed

    private void button17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button17ActionPerformed
        String query="select name,surname,datearrived,datedeparture from records where room="+button17.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button17ActionPerformed

    private void button18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button18ActionPerformed
         String query="select name,surname,datearrived,datedeparture from records where room="+button18.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button18ActionPerformed

    private void button19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button19ActionPerformed
       String query="select name,surname,datearrived,datedeparture from records where room="+button19.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button19ActionPerformed

    private void button20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button20ActionPerformed
         String query="select name,surname,datearrived,datedeparture from records where room="+button20.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button20ActionPerformed

    private void button21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button21ActionPerformed
       String query="select name,surname,datearrived,datedeparture from records where room="+button21.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button21ActionPerformed

    private void button22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button22ActionPerformed
      String query="select name,surname,datearrived,datedeparture from records where room="+button22.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button22ActionPerformed

    private void button23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button23ActionPerformed
       String query="select name,surname,datearrived,datedeparture from records where room="+button23.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button23ActionPerformed

    private void button24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button24ActionPerformed
         String query="select name,surname,datearrived,datedeparture from records where room="+button24.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button24ActionPerformed

    private void button25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button25ActionPerformed
        String query="select name,surname,datearrived,datedeparture from records where room="+button25.getLabel();
        PreparedStatement ps;
        try {
            ps = DBUTIL.connection().prepareStatement(query);
              ResultSet res=ps.executeQuery();
              ArrayList<String> dd= new ArrayList<>();
              res.next();
                dd.add(res.getString(1));
                dd.add(res.getString(2));
                dd.add(res.getString(3));
                dd.add(res.getString(4));
               
               JOptionPane.showMessageDialog(null, dd, "ROOMS DETAILS", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(AvailableRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button25ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        TableMenu mn= new TableMenu();
        mn.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvailableRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AvailableRoom().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button10;
    private java.awt.Button button11;
    private java.awt.Button button12;
    private java.awt.Button button13;
    private java.awt.Button button14;
    private java.awt.Button button15;
    private java.awt.Button button16;
    private java.awt.Button button17;
    private java.awt.Button button18;
    private java.awt.Button button19;
    private java.awt.Button button2;
    private java.awt.Button button20;
    private java.awt.Button button21;
    private java.awt.Button button22;
    private java.awt.Button button23;
    private java.awt.Button button24;
    private java.awt.Button button25;
    private java.awt.Button button26;
    private java.awt.Button button3;
    private java.awt.Button button4;
    private java.awt.Button button5;
    private java.awt.Button button6;
    private java.awt.Button button7;
    private java.awt.Button button8;
    private java.awt.Button button9;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
